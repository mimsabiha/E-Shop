{"ast":null,"code":"import axios from 'axios';\n\nconst delay = ms => new Promise(res => setTimeout(res, ms));\n\nexport const placeOrder = (token, subtotal) => async (dispatch, getState) => {\n  dispatch({\n    type: 'PLACE_ORDER_REQUEST'\n  });\n  const currentUser = getState().loginUserReducer.currentUser;\n  const cartItems = getState().cartReducer.cartItems;\n\n  try {\n    const response = await axios.post('http://localhost:8000/storeAPI/orders/placeOrder', {\n      token,\n      subtotal,\n      currentUser,\n      cartItems\n    });\n    dispatch({\n      type: 'PLACE_ORDER_SUCCESS'\n    });\n    localStorage.removeItem('cartItems');\n    await delay(3000);\n    window.location.href = '/cart'; // console.log(response.json());\n  } catch (error) {\n    dispatch({\n      type: 'PLACE_ORDER_FAILED'\n    });\n  }\n};\nexport const getUserOrders = () => async (dispatch, getState) => {\n  const currentUser = getState().loginUserReducer.currentUser;\n  dispatch({\n    type: 'GET_USER_ORDERS_REQ'\n  });\n\n  try {\n    const response = await axios.get('http://localhost:8000/storeAPI/orders/getuserorders', {\n      params: {\n        userid: currentUser._id\n      }\n    }); // console.log(response.data)\n\n    dispatch({\n      type: 'GET_USER_ORDERS_SUCCESS',\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: 'GET_USER_ORDERS_FAILED',\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Hp/Desktop/466-ECommerce/frontend/client/src/actions/orderActions.js"],"names":["axios","delay","ms","Promise","res","setTimeout","placeOrder","token","subtotal","dispatch","getState","type","currentUser","loginUserReducer","cartItems","cartReducer","response","post","localStorage","removeItem","window","location","href","error","getUserOrders","get","params","userid","_id","payload","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAJ,CAAYC,GAAG,IAAIC,UAAU,CAACD,GAAD,EAAMF,EAAN,CAA7B,CAApB;;AAEA,OAAO,MAAMI,UAAU,GAAE,CAACC,KAAD,EAAOC,QAAP,KAAmB,OAAMC,QAAN,EAAgBC,QAAhB,KAA2B;AAEnED,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAC;AAAN,GAAD,CAAR;AACA,QAAMC,WAAW,GAAEF,QAAQ,GAAGG,gBAAX,CAA4BD,WAA/C;AACA,QAAME,SAAS,GAAGJ,QAAQ,GAAGK,WAAX,CAAuBD,SAAzC;;AACA,MAAG;AAEC,UAAME,QAAQ,GAAC,MAAMhB,KAAK,CAACiB,IAAN,CAAW,kDAAX,EAA8D;AAACV,MAAAA,KAAD;AAAOC,MAAAA,QAAP;AAAgBI,MAAAA,WAAhB;AAA4BE,MAAAA;AAA5B,KAA9D,CAArB;AACAL,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAR;AACAO,IAAAA,YAAY,CAACC,UAAb,CAAwB,WAAxB;AACA,UAAMlB,KAAK,CAAC,IAAD,CAAX;AACAmB,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,OAArB,CAND,CAQC;AAEH,GAVD,CAUC,OAAMC,KAAN,EAAY;AACTd,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAC;AAAN,KAAD,CAAR;AACH;AACJ,CAlBM;AAmBP,OAAO,MAAMa,aAAa,GAAC,MAAI,OAAOf,QAAP,EAAgBC,QAAhB,KAA2B;AAEtD,QAAME,WAAW,GAAEF,QAAQ,GAAGG,gBAAX,CAA4BD,WAA/C;AACAH,EAAAA,QAAQ,CAAC;AAACE,IAAAA,IAAI,EAAC;AAAN,GAAD,CAAR;;AAEA,MAAI;AACA,UAAMK,QAAQ,GAAG,MAAMhB,KAAK,CAACyB,GAAN,CAAU,qDAAV,EACvB;AAACC,MAAAA,MAAM,EAAE;AAACC,QAAAA,MAAM,EAAEf,WAAW,CAACgB;AAArB;AAAT,KADuB,CAAvB,CADA,CAGA;;AACAnB,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAC,yBAAN;AAAiCkB,MAAAA,OAAO,EAAEb,QAAQ,CAACc;AAAnD,KAAD,CAAR;AAEH,GAND,CAME,OAAOP,KAAP,EAAc;AACZd,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAC,wBAAN;AAAiCkB,MAAAA,OAAO,EAACN;AAAzC,KAAD,CAAR;AACH;AAEJ,CAfM","sourcesContent":["import axios from 'axios'\r\nconst delay = ms => new Promise(res => setTimeout(res, ms));\r\n\r\nexport const placeOrder =(token,subtotal)=> async(dispatch, getState)=>{ \r\n\r\n    dispatch({type:'PLACE_ORDER_REQUEST'})\r\n    const currentUser= getState().loginUserReducer.currentUser\r\n    const cartItems = getState().cartReducer.cartItems\r\n    try{\r\n\r\n        const response=await axios.post('http://localhost:8000/storeAPI/orders/placeOrder',{token,subtotal,currentUser,cartItems});\r\n        dispatch({type:'PLACE_ORDER_SUCCESS'})\r\n        localStorage.removeItem('cartItems');\r\n        await delay(3000);\r\n        window.location.href='/cart'\r\n        \r\n        // console.log(response.json());\r\n\r\n    }catch(error){\r\n        dispatch({type:'PLACE_ORDER_FAILED'})\r\n    }\r\n}\r\nexport const getUserOrders=()=>async (dispatch,getState)=>{\r\n\r\n    const currentUser= getState().loginUserReducer.currentUser\r\n    dispatch({type:'GET_USER_ORDERS_REQ'})\r\n\r\n    try {\r\n        const response = await axios.get('http://localhost:8000/storeAPI/orders/getuserorders',\r\n        {params: {userid: currentUser._id}})\r\n        // console.log(response.data)\r\n        dispatch({type:'GET_USER_ORDERS_SUCCESS', payload: response.data})\r\n\r\n    } catch (error) {\r\n        dispatch({type:'GET_USER_ORDERS_FAILED' , payload:error})\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}